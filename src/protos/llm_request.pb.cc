// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: llm_request.proto

#include "llm_request.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace llm_request {
PROTOBUF_CONSTEXPR LLMInit::LLMInit(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.apikey_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.prompt_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LLMInitDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LLMInitDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LLMInitDefaultTypeInternal() {}
  union {
    LLMInit _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LLMInitDefaultTypeInternal _LLMInit_default_instance_;
PROTOBUF_CONSTEXPR LLMInference::LLMInference(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.answer_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LLMInferenceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LLMInferenceDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LLMInferenceDefaultTypeInternal() {}
  union {
    LLMInference _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LLMInferenceDefaultTypeInternal _LLMInference_default_instance_;
}  // namespace llm_request
static ::_pb::Metadata file_level_metadata_llm_5frequest_2eproto[2];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_llm_5frequest_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_llm_5frequest_2eproto = nullptr;

const uint32_t TableStruct_llm_5frequest_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::llm_request::LLMInit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::llm_request::LLMInit, _impl_.apikey_),
  PROTOBUF_FIELD_OFFSET(::llm_request::LLMInit, _impl_.prompt_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::llm_request::LLMInference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::llm_request::LLMInference, _impl_.answer_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::llm_request::LLMInit)},
  { 8, -1, -1, sizeof(::llm_request::LLMInference)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::llm_request::_LLMInit_default_instance_._instance,
  &::llm_request::_LLMInference_default_instance_._instance,
};

const char descriptor_table_protodef_llm_5frequest_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\021llm_request.proto\022\013llm_request\")\n\007LLMI"
  "nit\022\016\n\006apiKey\030\001 \001(\t\022\016\n\006prompt\030\002 \001(\t\"\036\n\014L"
  "LMInference\022\016\n\006answer\030\001 \001(\t2P\n\016AskLLMQue"
  "stion\022>\n\tPromptLLM\022\024.llm_request.LLMInit"
  "\032\031.llm_request.LLMInference\"\000b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_llm_5frequest_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_llm_5frequest_2eproto = {
    false, false, 197, descriptor_table_protodef_llm_5frequest_2eproto,
    "llm_request.proto",
    &descriptor_table_llm_5frequest_2eproto_once, nullptr, 0, 2,
    schemas, file_default_instances, TableStruct_llm_5frequest_2eproto::offsets,
    file_level_metadata_llm_5frequest_2eproto, file_level_enum_descriptors_llm_5frequest_2eproto,
    file_level_service_descriptors_llm_5frequest_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_llm_5frequest_2eproto_getter() {
  return &descriptor_table_llm_5frequest_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_llm_5frequest_2eproto(&descriptor_table_llm_5frequest_2eproto);
namespace llm_request {

// ===================================================================

class LLMInit::_Internal {
 public:
};

LLMInit::LLMInit(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:llm_request.LLMInit)
}
LLMInit::LLMInit(const LLMInit& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LLMInit* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.apikey_){}
    , decltype(_impl_.prompt_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.apikey_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.apikey_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_apikey().empty()) {
    _this->_impl_.apikey_.Set(from._internal_apikey(), 
      _this->GetArenaForAllocation());
  }
  _impl_.prompt_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.prompt_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_prompt().empty()) {
    _this->_impl_.prompt_.Set(from._internal_prompt(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:llm_request.LLMInit)
}

inline void LLMInit::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.apikey_){}
    , decltype(_impl_.prompt_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.apikey_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.apikey_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.prompt_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.prompt_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

LLMInit::~LLMInit() {
  // @@protoc_insertion_point(destructor:llm_request.LLMInit)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LLMInit::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.apikey_.Destroy();
  _impl_.prompt_.Destroy();
}

void LLMInit::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LLMInit::Clear() {
// @@protoc_insertion_point(message_clear_start:llm_request.LLMInit)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.apikey_.ClearToEmpty();
  _impl_.prompt_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LLMInit::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string apiKey = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_apikey();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "llm_request.LLMInit.apiKey"));
        } else
          goto handle_unusual;
        continue;
      // string prompt = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_prompt();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "llm_request.LLMInit.prompt"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LLMInit::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:llm_request.LLMInit)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string apiKey = 1;
  if (!this->_internal_apikey().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_apikey().data(), static_cast<int>(this->_internal_apikey().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "llm_request.LLMInit.apiKey");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_apikey(), target);
  }

  // string prompt = 2;
  if (!this->_internal_prompt().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_prompt().data(), static_cast<int>(this->_internal_prompt().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "llm_request.LLMInit.prompt");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_prompt(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:llm_request.LLMInit)
  return target;
}

size_t LLMInit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:llm_request.LLMInit)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string apiKey = 1;
  if (!this->_internal_apikey().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_apikey());
  }

  // string prompt = 2;
  if (!this->_internal_prompt().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_prompt());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LLMInit::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LLMInit::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LLMInit::GetClassData() const { return &_class_data_; }


void LLMInit::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LLMInit*>(&to_msg);
  auto& from = static_cast<const LLMInit&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:llm_request.LLMInit)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_apikey().empty()) {
    _this->_internal_set_apikey(from._internal_apikey());
  }
  if (!from._internal_prompt().empty()) {
    _this->_internal_set_prompt(from._internal_prompt());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LLMInit::CopyFrom(const LLMInit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:llm_request.LLMInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LLMInit::IsInitialized() const {
  return true;
}

void LLMInit::InternalSwap(LLMInit* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.apikey_, lhs_arena,
      &other->_impl_.apikey_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.prompt_, lhs_arena,
      &other->_impl_.prompt_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata LLMInit::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_llm_5frequest_2eproto_getter, &descriptor_table_llm_5frequest_2eproto_once,
      file_level_metadata_llm_5frequest_2eproto[0]);
}

// ===================================================================

class LLMInference::_Internal {
 public:
};

LLMInference::LLMInference(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:llm_request.LLMInference)
}
LLMInference::LLMInference(const LLMInference& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LLMInference* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.answer_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.answer_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.answer_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_answer().empty()) {
    _this->_impl_.answer_.Set(from._internal_answer(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:llm_request.LLMInference)
}

inline void LLMInference::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.answer_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.answer_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.answer_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

LLMInference::~LLMInference() {
  // @@protoc_insertion_point(destructor:llm_request.LLMInference)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LLMInference::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.answer_.Destroy();
}

void LLMInference::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LLMInference::Clear() {
// @@protoc_insertion_point(message_clear_start:llm_request.LLMInference)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.answer_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LLMInference::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string answer = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_answer();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "llm_request.LLMInference.answer"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LLMInference::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:llm_request.LLMInference)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string answer = 1;
  if (!this->_internal_answer().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_answer().data(), static_cast<int>(this->_internal_answer().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "llm_request.LLMInference.answer");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_answer(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:llm_request.LLMInference)
  return target;
}

size_t LLMInference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:llm_request.LLMInference)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string answer = 1;
  if (!this->_internal_answer().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_answer());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LLMInference::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LLMInference::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LLMInference::GetClassData() const { return &_class_data_; }


void LLMInference::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LLMInference*>(&to_msg);
  auto& from = static_cast<const LLMInference&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:llm_request.LLMInference)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_answer().empty()) {
    _this->_internal_set_answer(from._internal_answer());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LLMInference::CopyFrom(const LLMInference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:llm_request.LLMInference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LLMInference::IsInitialized() const {
  return true;
}

void LLMInference::InternalSwap(LLMInference* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.answer_, lhs_arena,
      &other->_impl_.answer_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata LLMInference::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_llm_5frequest_2eproto_getter, &descriptor_table_llm_5frequest_2eproto_once,
      file_level_metadata_llm_5frequest_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace llm_request
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::llm_request::LLMInit*
Arena::CreateMaybeMessage< ::llm_request::LLMInit >(Arena* arena) {
  return Arena::CreateMessageInternal< ::llm_request::LLMInit >(arena);
}
template<> PROTOBUF_NOINLINE ::llm_request::LLMInference*
Arena::CreateMaybeMessage< ::llm_request::LLMInference >(Arena* arena) {
  return Arena::CreateMessageInternal< ::llm_request::LLMInference >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
